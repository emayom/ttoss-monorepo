{"version":3,"file":"bundle.js","sources":["../src/isSet.js","../src/isMap.js","../src/isDate.js","../src/isArray.js","../src/isObject.js","../src/isSymbol.js","../src/isRegExp.js","../src/isWeakMap.js","../src/isWeakSet.js","../src/isFunction.js","../src/isTypedArray.js","../src/copySet.js","../src/copyMap.js","../src/copyDate.js","../src/copyArray.js","../src/copyObject.js","../src/copySymbol.js","../src/copyFunciton.js","../src/cloneArrayBuffer.js","../src/cloneArrayBufferView.js","../src/copyTypedArray.js","../src/copyRegExp.js","../src/deepClone.js"],"sourcesContent":["/**\n * `value`가 `Set`인지 확인한다.\n * @param {*} value\n * @returns {boolean} `value`가 Set이라면 `true`를, 아니라면 `false`를 리턴한다.\n */\nconst isSet = (value) => value instanceof Set;\n\nexport default isSet;\n","/**\n * `value`가 `Map`인지 확인한다.\n * @param {*} value\n * @returns {boolean} `value`가 Map이라면 `true`를, 아니라면 `false`를 리턴한다.\n */\nconst isMap = (value) => value instanceof Map;\n\nexport default isMap;\n","/**\n * `value`가 `Date`인지 확인한다.\n * @param {*} value\n * @returns {boolean} `value`가 Date라면 `true`를, 아니라면 `false`를 리턴한다.\n */\nconst isDate = (value) => value instanceof Date;\n\nexport default isDate;\n","/**\n * `value`가 `Array`인지 확인한다.\n * @param {*} value\n * @returns {boolean} `value`가 Array라면 `true`를, 아니라면 `false`를 리턴한다.\n */\nconst isArray = (value) => Array.isArray(value);\n\nexport default isArray;\n","/**\n * `value`가 `Object`인지 확인한다.\n * @param {*} value\n * @returns {boolean} `value`가 Object라면 `true`를, 아니라면 `false`를 리턴한다.\n */\nconst isObject = (value) => value?.constructor === Object\n    || (value?.constructor === undefined && typeof value === 'object');\n\nexport default isObject;\n","/**\n * `value`가 `Symbol`인지 확인한다.\n * @param {*} value\n * @returns {boolean} `value`가 Symbol이라면 `true`를, 아니라면 `false`를 리턴한다.\n */\nconst isSymbol = (value) => value?.constructor === Symbol;\n\nexport default isSymbol;\n","/**\n * `value`가 `RegExp`인지 확인한다.\n * @param {*} value\n * @returns {boolean} `value`가 RegExp이라면 `true`를, 아니라면 `false`를 리턴한다.\n */\nconst isRegExp = (value) => value instanceof RegExp || value?.constructor === RegExp;\n\nexport default isRegExp;\n","/**\n * `value`가 `WeakMap`인지 확인한다.\n * @param {*} value\n * @returns {boolean} `value`가 WeakMap이라면 `true`를, 아니라면 `false`를 리턴한다.\n */\nconst isWeakMap = (value) => value instanceof WeakMap;\n\nexport default isWeakMap;\n","/**\n * `value`가 `WeakSet`인지 확인한다.\n * @param {*} value\n * @returns {boolean} `value`가 WeakSet이라면 `true`를, 아니라면 `false`를 리턴한다.\n */\nconst isWeakSet = (value) => value instanceof WeakSet;\n\nexport default isWeakSet;\n","/**\n * `value`가 `Function`인지 확인한다.\n * @param {*} value\n * @returns {boolean} `value`가 Function이라면 `true`를, 아니라면 `false`를 리턴한다.\n */\nconst isFunction = (value) => value?.constructor === Function || typeof value === 'function';\n\nexport default isFunction;\n","/**\n * `value`가 `TypedArray`로 분류되는지 확인한다.\n * (e.g. Int8Array, Uint8Array, Uint8ClampedArray, Int16Array ...)\n * @param {*} value\n * @returns {boolean} `value`가 TypedArray라면 `true`를, 아니라면 `false`를 리턴한다.\n */\nconst isTypedArray = (value) => {\n  const re = /^(?:Int(?:8|16|32))|(?:Uint(?:8|16|32))|(?:Float(?:32|64))|(?:Big(?:Int|Uint)64)(Clamped)?Array$/;\n  return re.test(value?.constructor.name) && ArrayBuffer.isView(value);\n};\n\nexport default isTypedArray;\n","/**\n * `Set`을 복사한다.\n * @param {Set} source\n * @returns {Set} 복사된 `Set`을 리턴한다.\n */\nconst copySet = (source) => new Set(source);\n\nexport default copySet;\n","/**\n * `Map`을 복사한다.\n * @param {Map} source\n * @returns {Map} 복사된 `Map`을 리턴한다.\n */\nconst copyMap = (source) => new Map(source);\n\nexport default copyMap;\n","/**\n * `Date`를 복사한다.\n * @param {Date} source\n * @returns {Date} 복사된 `Date`를 리턴한다.\n */\nconst copyDate = (source) => new Date(source);\n\nexport default copyDate;\n","/**\n * `Array`를 복사한다.\n * @param {Array} source\n * @returns {Array} 복사된 `Array`를 리턴한다.\n */\nconst copyArray = (source) => (\n  source.reduce((a, c) => {\n    a.push(c);\n    return a;\n  }, [])\n);\n\nexport default copyArray;\n","/**\n * `Object`를 복사한다.\n * @param {Object} source\n * @returns {Object} 복사된 `Object`를 리턴한다.\n */\nconst copyObject = (source) => (\n  Object.keys(source).reduce((a, c) => ({ ...a, [c]: source[c] }), {})\n);\n\nexport default copyObject;\n","/**\n * `Symbol`을 복사한다.\n * @param {Object} source\n * @returns {Object} 복사된 `Symbol`을 리턴한다.\n */\nconst copySymbol = (source) => Object(source.valueOf());\n\nexport default copySymbol;\n","/**\n * `Function`을 복사한다.\n * @param {Function} source\n * @returns {Function} 복사된 `Function`을 리턴한다.\n */\nconst copyFunction = (source) => source.bind(this);\n\nexport default copyFunction;\n","/**\n * @param {ArrayBuffer} source\n * @returns {ArrayBuffer} 복제한 `ArrayBuffer`를 리턴한다.\n */\nconst cloneArrayBuffer = (source) => (\n  source.resizable\n    ? new source.constructor(source.byteLength, { maxByteLength: source.maxByteLength })\n    : new source.constructor(source.byteLength)\n);\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './cloneArrayBuffer';\n/**\n * `ArrayBufferView`를 복제한다.\n * @param {Object} source\n * @param {boolean} isDeep\n * @returns {Object} 복제된 `ArrayBufferView`를 리턴한다.\n */\nconst cloneArrayBufferView = (source, isDeep) => {\n  const buffer = isDeep ? cloneArrayBuffer(source.buffer) : source.buffer;\n  return new source.constructor(buffer, source.byteOffset, source.length);\n};\n\nexport default cloneArrayBufferView;\n","import cloneArrayBufferView from './cloneArrayBufferView';\n/**\n * `typedArray`을 복사한다.\n * @param {Object} source\n * @param {boolean} isDeep\n * @returns {Object} 복사된 `typedArray`를 리턴한다.\n */\nconst copyTypedArray = (source, isDeep) => {\n  const result = cloneArrayBufferView(source, isDeep);\n  result.set(source, 0);\n  return result;\n};\n\nexport default copyTypedArray;\n","/**\n * @param {Object} source\n * @returns {Object} 복사된 `RegExp`를 리턴한다.\n */\nconst copyRegExp = (source) => {\n  const result = new RegExp(source.source, source.flags);\n  if (source.global) {\n    result.lastIndex = source.lastIndex;\n  }\n  return result;\n};\n\nexport default copyRegExp;\n","// type check\nimport isSet from './isSet';\nimport isMap from './isMap';\nimport isDate from './isDate';\nimport isArray from './isArray';\nimport isObject from './isObject';\nimport isSymbol from './isSymbol';\nimport isRegExp from './isRegExp';\nimport isWeakMap from './isWeakMap';\nimport isWeakSet from './isWeakSet';\nimport isFunction from './isFunction';\nimport isTypedArray from './isTypedArray';\n// copy\nimport copySet from './copySet';\nimport copyMap from './copyMap';\nimport copyDate from './copyDate';\nimport copyArray from './copyArray';\nimport copyObject from './copyObject';\nimport copySymbol from './copySymbol';\nimport copyFunction from './copyFunciton';\nimport copyTypedArray from './copyTypedArray';\nimport copyRegExp from './copyRegExp';\n\n/** */\nconst copyValidations = [\n  {\n    validation: isSymbol,\n    copy: copySymbol,\n  },\n  {\n    validation: isArray,\n    copy: copyArray,\n  },\n  {\n    validation: isObject,\n    copy: copyObject,\n  },\n  {\n    validation: isSet,\n    copy: copySet,\n  },\n  {\n    validation: isMap,\n    copy: copyMap,\n  },\n  {\n    validation: isDate,\n    copy: copyDate,\n  },\n  {\n    validation: isRegExp,\n    copy: copyRegExp,\n  },\n  {\n    validation: isWeakMap,\n    copy: (source) => source,\n  },\n  {\n    validation: isWeakSet,\n    copy: (source) => source,\n  },\n  {\n    validation: isFunction,\n    copy: copyFunction,\n  },\n  {\n    validation: isTypedArray,\n    copy: (source) => copyTypedArray(source, true),\n  },\n];\n\n/**\n * 원본 객체에 대한 참조가 끊어진 깊은 복사를 수행한다.\n * @param {*} source\n * @returns {*}\n */\nconst deepClone = (source) => {\n  if (!(source instanceof Object)) return source;\n\n  const { copy } = copyValidations.find(({ validation }) => validation(source));\n\n  if (!copy) throw new Error(`Validation for type '${source}' is not registered.`);\n  else {\n    const cloned = copy(source);\n\n    Object.entries(cloned).forEach(([key]) => {\n      cloned[key] = deepClone(cloned[key]);\n    });\n\n    return cloned;\n  }\n};\n\nexport default deepClone;\n"],"names":["this"],"mappings":"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"}